version: "3.7"
services:
  # Consul
  consul:
    image: consul:latest
    container_name: consul
    restart: on-failure
    # We can append -datacenter=dc1 to set datacenter in command
    command: agent -server -bootstrap-expect=1 -node=consul-server -bind=0.0.0.0 -client=0.0.0.0 -ui
    environment: 
      - "CONSUL_LOCAL_CONFIG={\"disable_update_check\": true}"
    volumes:
      - ./.docker/consul/node:/consul/data
    networks:
      - starrycloudnetwork
    ports: 
      - 8500:8500
  # MySQL
  mysql:
    image: mysql:${PL_MYSQL_VERSION}
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - ./.docker/mysql/system:/var/lib/mysql
      - ./.docker/mysql/root:/root
      - ./.docker/mysql/log:/var/log/mysql
      - ./config/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: ${PL_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${PL_MYSQL_DATABASE}
      MYSQL_USER: ${PL_MYSQL_USER}
      MYSQL_PASSWORD: ${PL_MYSQL_PASSWORD}
    networks:
      - starrycloudnetwork
    ports:
      - 3306:3306
  # Redis
  redis:
    image: redis:latest
    container_name: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes: 
      - ./.docker/redis:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - starrycloudnetwork
    ports:
      - 6379:6379
  # Nginx
  nginx:
    build: 
      context: ./config/nginx
      args:
        - CHANGE_SOURCE=${PL_NGINX_CHANGE_SOURCE}
        - http_proxy
        - https_proxy
        - no_proxy
    container_name: nginx
    image: nginx:latest
    restart: unless-stopped
    ports: 
      - 80:80
      - 443:443
    volumes: 
      - ./wwwroot:/var/www
      - ./wwwlogs:/var/log/nginx
      - ./config/nginx/sites:/etc/nginx/sites-available
      - ./config/nginx/ssl:/etc/nginx/ssl
    environment: 
      - TZ=Asia/Shanghai
    networks: 
      starrycloudnetwork: 
  # php-fpm
  php-fpm:
    build: 
      context: ./config/php-fpm
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - BASE_IMAGE_TAG_PREFIX=${PHP_FPM_BASE_IMAGE_TAG_PREFIX}
        - LARADOCK_PHP_VERSION=${PHP_VERSION}
        - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}
        - INSTALL_BZ2=${PHP_FPM_INSTALL_BZ2}
        - INSTALL_ENCHANT=${PHP_FPM_INSTALL_ENCHANT}
        - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
        - INSTALL_GNUPG=${PHP_FPM_INSTALL_GNUPG}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_PCOV=${PHP_FPM_INSTALL_PCOV}
        - INSTALL_PHPDBG=${PHP_FPM_INSTALL_PHPDBG}
        - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
        - INSTALL_SSH2=${PHP_FPM_INSTALL_SSH2}
        - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
        - INSTALL_XSL=${PHP_FPM_INSTALL_XSL}
        - INSTALL_SMB=${PHP_FPM_INSTALL_SMB}
        - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
        - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
        - INSTALL_CASSANDRA=${PHP_FPM_INSTALL_CASSANDRA}
        - INSTALL_GEARMAN=${PHP_FPM_INSTALL_GEARMAN}
        - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
        - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
        - INSTALL_OCI8=${PHP_FPM_INSTALL_OCI8}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
        - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
        - INSTALL_POSTGIS=${PHP_FPM_INSTALL_POSTGIS}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
        - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
        - INSTALL_PHALCON=${PHP_FPM_INSTALL_PHALCON}
        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
        - INSTALL_TAINT=${PHP_FPM_INSTALL_TAINT}
        - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
        - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}
        - INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}
        - INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE}
        - INSTALL_APCU=${PHP_FPM_INSTALL_APCU}
        - INSTALL_CACHETOOL=${PHP_FPM_INSTALL_CACHETOOL}
        - INSTALL_YAML=${PHP_FPM_INSTALL_YAML}
        - INSTALL_RDKAFKA=${PHP_FPM_INSTALL_RDKAFKA}
        - INSTALL_GETTEXT=${PHP_FPM_INSTALL_GETTEXT}
        - INSTALL_ADDITIONAL_LOCALES=${PHP_FPM_INSTALL_ADDITIONAL_LOCALES}
        - INSTALL_MYSQL_CLIENT=${PHP_FPM_INSTALL_MYSQL_CLIENT}
        - INSTALL_PING=${PHP_FPM_INSTALL_PING}
        - INSTALL_SSHPASS=${PHP_FPM_INSTALL_SSHPASS}
        - INSTALL_MAILPARSE=${PHP_FPM_INSTALL_MAILPARSE}
        - INSTALL_PCNTL=${PHP_FPM_INSTALL_PCNTL}
        - ADDITIONAL_LOCALES=${PHP_FPM_ADDITIONAL_LOCALES}
        - INSTALL_FFMPEG=${PHP_FPM_FFMPEG}
        - INSTALL_AUDIOWAVEFORM=${PHP_FPM_AUDIOWAVEFORM}
        - INSTALL_WKHTMLTOPDF=${PHP_FPM_INSTALL_WKHTMLTOPDF}
        - INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}
        - INSTALL_XMLRPC=${PHP_FPM_INSTALL_XMLRPC}
        - INSTALL_PHPDECIMAL=${PHP_FPM_INSTALL_PHPDECIMAL}
        - INSTALL_ZOOKEEPER=${PHP_FPM_INSTALL_ZOOKEEPER}
        - DOWNGRADE_OPENSSL_TLS_AND_SECLEVEL=${PHP_DOWNGRADE_OPENSSL_TLS_AND_SECLEVEL}
        - PUID=${PHP_FPM_PUID}
        - PGID=${PHP_FPM_PGID}
        - IMAGEMAGICK_VERSION=${PHP_FPM_IMAGEMAGICK_VERSION}
        - LOCALE=${PHP_FPM_DEFAULT_LOCALE}
        - PHP_FPM_NEW_RELIC=${PHP_FPM_NEW_RELIC}
        - PHP_FPM_NEW_RELIC_KEY=${PHP_FPM_NEW_RELIC_KEY}
        - PHP_FPM_NEW_RELIC_APP_NAME=${PHP_FPM_NEW_RELIC_APP_NAME}
        - INSTALL_DOCKER_CLIENT=${PHP_FPM_INSTALL_DOCKER_CLIENT}
        - http_proxy
        - https_proxy
        - no_proxy
    container_name: php-fpm
    volumes:
      - ./config/php-fpm/php8.0.ini:/usr/local/etc/php/php.ini
      - ./wwwroot:/var/www
    expose: 
      - 9000
    environment: 
      - FAKETIME=-0
    networks: 
      - starrycloudnetwork
  # Nacos
  nacos:
    image: nacos/nacos-server:latest
    container_name: nacos-standalone
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
    volumes:
      - ./.docker/nacos/standalone-logs/:/home/nacos/logs
      - ./config/nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties
    networks: 
      - starrycloudnetwork
    ports:
      - 8848:8848
  # Prometheus
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./config/nacos/prometheus/prometheus-standalone.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    depends_on:
      - nacos
    networks:
      - starrycloudnetwork
    restart: on-failure
  # Grafana
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    networks:
      - starrycloudnetwork
    ports:
      - 3000:3000
    restart: on-failure
  rabbitmq:
    image: rabbitmq:alpine
    container_name: rabbitmq
    privileged: true
    volumes:
      - ./.docker/rabbitmq/data:/var/lib/rabbitmq
      - ./.docker/rabbitmq/logs:/var/log/rabbitmq
      - ./config/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
    environment:
      RABBITMQ_ERLANG_COOKIE: ${PL_RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${PL_RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${PL_RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${PL_RABBITMQ_DEFAULT_VHOST}
    networks:
      - starrycloudnetwork
    ports:
      - 5672:5672
      - 15672:15672
networks:
  starrycloudnetwork: 
